services:
  app:
    build:
      context: ./backend/WhereMoney.Api
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ./backend/WhereMoney.Api
          target: /app
        - action: rebuild
          path: ./backend/WhereMoney.Api/poetry.lock
    depends_on:
      - db
    environment:
      - DATABASE_URL
    networks:
      - backend
    ports:
      - "5000:5000"
    restart: unless-stopped

  webapp:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
        - action: rebuild
          path: package-lock.json
    networks:
      - backend
    ports:
      - "4200:4200"
    restart: unless-stopped

  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge

